# [Assistente_Investimento]

[![Status do Projeto](https://img.shields.io/badge/status-Conclu√≠do-green)](https://github.com/douglasbatat/imersao-alura)
[![Linguagem](https://img.shields.io/badge/linguagem-Python-blue)](https://www.python.org/)
[![Licen√ßa](https://img.shields.io/badge/licen√ßa-MIT-green)](https://opensource.org/licenses/MIT)

## üéØ Sobre o Projeto

Desenvolvido durante a Imers√£o Alura, este projeto apresenta um assistente de investimento inovador constru√≠do em Python. Sua principal caracter√≠stica reside na utiliza√ß√£o de um chatbot interativo para coletar informa√ß√µes cruciais do usu√°rio, seguido por um sistema robusto de **cinco agentes especializados** que trabalham em conjunto para fornecer recomenda√ß√µes de investimento personalizadas e otimiza√ß√£o de portf√≥lio.

O objetivo principal √© simplificar o processo de investimento, guiando o usu√°rio desde a coleta de suas necessidades e perfil at√© a sugest√£o de estrat√©gias alinhadas com seus objetivos e toler√¢ncia a riscos.

## ‚ú® Arquitetura e Fluxo de Trabalho

O assistente de investimento opera atrav√©s de um fluxo bem definido, orquestrado por cinco agentes distintos:

1.  **Agente de Interface com o Usu√°rio (AIU):**
    * Respons√°vel por interagir diretamente com o usu√°rio atrav√©s de um chatbot.
    * Coleta informa√ß√µes iniciais sobre os objetivos financeiros, horizonte de investimento e outras prefer√™ncias do usu√°rio.
    * Garante uma comunica√ß√£o clara e amig√°vel para facilitar a entrada de dados.

2.  **Agente de Coleta e Processamento de Dados (ACPD):**
    * Recebe os dados coletados pelo AIU e os processa para garantir sua integridade e usabilidade.
    * Pode ser respons√°vel por buscar dados adicionais relevantes, como informa√ß√µes demogr√°ficas ou socioecon√¥micas (se aplic√°vel).
    * Prepara os dados para serem utilizados pelos agentes subsequentes.

3.  **Agente de An√°lise de Perfil e Risco (AAPR):**
    * Utiliza os dados processados pelo ACPD para analisar o perfil de investidor do usu√°rio.
    * Avalia a toler√¢ncia ao risco com base nas respostas fornecidas.
    * Define o n√≠vel de risco adequado para as recomenda√ß√µes futuras.

4.  **Agente de An√°lise de Mercado e Ativos (AAMA):**
    * Realiza a an√°lise do mercado financeiro, buscando informa√ß√µes sobre diversos ativos (a√ß√µes, fundos, etc.).
    * Pode utilizar APIs financeiras e outras fontes de dados para obter informa√ß√µes atualizadas sobre o desempenho e as tend√™ncias do mercado.
    * Identifica oportunidades e riscos em diferentes classes de ativos.

5.  **Agente de Gera√ß√£o de Recomenda√ß√µes e Otimiza√ß√£o de Portf√≥lio (AGROP):**
    * Com base nas an√°lises do AAPR (perfil de risco) e do AAMA (an√°lise de mercado), este agente gera recomenda√ß√µes de investimento personalizadas.
    * Prop√µe uma aloca√ß√£o de portf√≥lio otimizada para os objetivos e o perfil de risco do usu√°rio.
    * Pode incluir sugest√µes de diversifica√ß√£o e estrat√©gias de longo prazo.

## üõ†Ô∏è Tecnologias Utilizadas

* **Linguagem de Programa√ß√£o:** Python
* **Chatbot:** [google-genai]
* **Bibliotecas/Frameworks:** 
    * [google-adk]
* **APIs (se aplic√°vel):**
    * [GOOGLE_API_KEY]
* **Outras Ferramentas:** [Coolab, Gemini, Google AI Studio]

## üöÄ Como Utilizar

1.  **Pr√©-requisitos:**
    Antes de executar o c√≥digo, certifique-se de ter o seguinte:
    
    Ambiente Google Colab: O script foi testado e otimizado para o Google Colab.
    Chave da API Google Gemini: Voc√™ precisar√° de uma chave da API Google Gemini. Obtenha uma no AI Studio ou na Google Cloud Console.
    Chave da API Armazenada no Google Colab Secrets: A chave da API deve ser armazenada nos "Secrets" do Google Colab com o nome GOOGLE_API_KEY.
2.  **Instala√ß√£o:**
    ```bash
    git clone [https://github.com/seu-usuario/seu-repositorio.git](https://github.com/seu-usuario/seu-repositorio.git)
    cd seu-repositorio
    pip install -r requirements.txt
    ```
3.  **Execu√ß√£o:**
    Siga estes passos para executar o script no Google Colab:
    
    Abra o Notebook no Google Colab: Fa√ßa upload do arquivo .ipynb contendo o c√≥digo para o seu ambiente Google Colab.
    
    Configure a Chave da API: No Google Colab, clique no √≠cone de chave (Secrets) na barra lateral esquerda. Adicione um novo "Secret" com o nome GOOGLE_API_KEY e cole o valor da sua chave da API Google Gemini.
    
    Execute as C√©lulas do Notebook Sequencialmente: O notebook √© estruturado em c√©lulas. Voc√™ deve executar as c√©lulas na ordem em que aparecem.
    
    C√©lula de Ambiente: Esta c√©lula inicializa o ambiente. Ela instala as bibliotecas necess√°rias (google-genai, google-adk) usando comandos m√°gicos %pip e configura a chave da API lendo-a dos secrets do Colab. Ela tamb√©m importa todas as bibliotecas e define as fun√ß√µes auxiliares call_agent e to_markdown.
    C√©lulas de Defini√ß√£o dos Agentes: Cada uma das c√©lulas seguintes define uma fun√ß√£o Python que representa um dos agentes (Interface com o Usu√°rio, Coleta e Processamento de Dados, An√°lise de Perfil e Risco, An√°lise de Mercado e Ativos, Gera√ß√£o de Recomenda√ß√µes e Otimiza√ß√£o de Portf√≥lio). A execu√ß√£o destas c√©lulas apenas define as fun√ß√µes, n√£o as executa.
    C√©lula Principal de Execu√ß√£o: Esta √© a √∫ltima c√©lula no script. Ela cont√©m a l√≥gica principal para interagir com o usu√°rio, coletar suas prefer√™ncias de investimento e chamar a sequ√™ncia de agentes.
    Interaja com o Assistente: Ap√≥s executar a c√©lula principal de execu√ß√£o, o assistente come√ßar√° a fazer perguntas no console do notebook sobre o objetivo, prazo, experi√™ncia, valor e risco do investimento. Responda √†s perguntas digitando o n√∫mero correspondente √† sua escolha ou fornecendo o texto solicitado e pressionando Enter.
    
    Observe a Execu√ß√£o dos Agentes: √Ä medida que voc√™ fornece as informa√ß√µes, o script chamar√° sequencialmente as fun√ß√µes que representam os agentes. A sa√≠da de cada agente ser√° exibida no notebook, identificada por t√≠tulos como "Resultado do Agente de Interface com o Usu√°rio (AIU)". A fun√ß√£o display(to_markdown(...)) √© usada para formatar a sa√≠da em Markdown para melhor legibilidade.
    
    Visualize as Recomenda√ß√µes: O fluxo terminar√° com a execu√ß√£o do Agente de Gera√ß√£o de Recomenda√ß√µes e Otimiza√ß√£o de Portf√≥lio (AGROP), que exibir√° as recomenda√ß√µes de investimento finais com base nas informa√ß√µes fornecidas e nas an√°lises dos agentes anteriores.

## ü§ù Contribui√ß√£o

Contribui√ß√µes s√£o bem-vindas! Se voc√™ tiver ideias para aprimorar a l√≥gica dos agentes, otimizar o chatbot ou adicionar novas funcionalidades, fique √† vontade para colaborar.

1.  Fa√ßa um fork do reposit√≥rio.
2.  Crie uma branch para sua feature (`git checkout -b feature/nova-funcionalidade`).
3.  Fa√ßa seus commits (`git commit -m 'Adiciona melhoria no AGROP para considerar renda fixa'`).
4.  Fa√ßa o push para a branch (`git push origin feature/nova-funcionalidade`).
5.  Abra um Pull Request.

## üìÑ Licen√ßa

Este projeto est√° sob a licen√ßa [MIT] - veja o arquivo [LICENSE](LICENSE) para detalhes.

## üßë‚Äçüíª Autor

[Douglas Rustiguelli Vieira]

[![LinkedIn](https://img.shields.io/badge/LinkedIn-SeuPerfilNoLinkedIn-blue)](https://www.linkedin.com/in/douglas-rustiguelli-vieira-24aab331/)
[![GitHub](https://img.shields.io/badge/GitHub-SeuUsuarioNoGitHub-lightgray)](https://github.com/douglasbatat)

## üôå Agradecimentos

Gostaria de expressar minha gratid√£o √† [Alura](https://www.alura.com.br/) pela imers√£o enriquecedora que possibilitou o desenvolvimento deste projeto inovador. Agrade√ßo tamb√©m minha fam√≠lia por todo apoio.
